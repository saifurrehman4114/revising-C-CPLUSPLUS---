     //Integer Data type
    int saif_8 = 8; //2 bytes
    short saif_8 = 8; //2bytes
    
    //declation 
    int a,b,c ;
    
    //Intialization 
    int a,b,c= 0;
    long saif_8 = 8; //4bytes 
    //real Data type
    float saif_8 = 8;
    double saif_8 = 8;
    long double saif_8 = 8;
    printf(%d );
     /* char data type and seq of chars string 
     
     boolean true false 
     
     //String
     string uses array char str[20];
     char str[] = "saif";
     cin>>setw(20)>>str; //will go through setw filter.
     cin.get(str,20)
     cin.get(var.width,terminator);
     cin.get(str,20,>);
     last would be null charactor /'0'
     
     strlen(str);
     char str1[25];
     strcpy(str1,str) //(Destination,source)
     /*
    
    format specifiers 
    
    %d decimal 
    %f float 
    %c character
    %ld long 
    %lf double
    %s string 
    %e exponent 
    %u ADDRESS return specifirer 
  
    
    NULL value in a pointer var
    
    //escape sequences 
    // /n next line
    // /r return for enter button  /a alert beep from compiler /t Tab col or 7 char spaces /b Backspaceone char before
    
    usage 
    unary- one operand  binary 2 operand  tertiary operators 3 operand ? conditional operator 
    
    
    // logical operator  combine different experssions 
    AND && OR || NOT ! XOR odd 1's EXNOR even zeros or 1's SHORT Circuiting
    
    relationals operators mathermatical exerisions    + - / * ** %   precedence and BODMAS OR PEMDAS Parentheses, Exponents, Multiplication and Division (from left to right)    
    comparision operators comaprsion expersiiosn 
    > < >= <= != == 
    
    Assignment operator =
    & address operator 
    
    increment and decrement operator ++ -- unary
    
    postfix and prefix
    A= 5
    ++A Pre, A++ post 
    c = ++a + b++
    break  get outside of the structure usage loop and swtich  & continue statement loops give control to header the condition of loop
    compound operators
    
    A += 1
    A -= 1
    A /= 1
    A *= 1
    A %=1
    
    A += (A+5)
    
    decisions 
    
     if else elseif switch( diif cases check diff outpt input can be int or char case matches case value cahr or int if no break all cases would be excuted or untill break comes
     in and default value like else  ) decision 
     
     tree read from right left  
     
     zero false +veor -ve would be true
     
     Nested If 
     
     conditional operator if (x>5) y=3 else x=5
     (x>5 ? y =3 : x=5) just one if else 
     
     multiple if else      
     
     
     loops and nested loops 
     
     for  till a range. inialization in it seprate with comma  i = 0 for(;i<3;i++) stepping condition can be inside for body stepping and testing condition for(:++i<3;) 
     
     infinite loop for(;;) 
     
     if u want to terminate then code  in body the decision for(::) if(getch()=="/r") break;
     
     for(int i=0: i<=5; i++); null loop 6 answer it will increase just th ecounter when condition would be false it will go to next line 
     
     while conditon can be complex with relational and logic operators and infinite loop. if we use while(i<10); infinite loop
     
     increment and decrement in conidition  while(++i<=10) if inside condition 1 it is true can terminte with decision other than variable. 
     
     do while 
     
  
  functions does some specific task user defined or built in function lib,
     
     (Arthimethic ,data conversion,character clasifciation string manipulation,searching, sorting, I/O, file handling,
     directory control, buffer ,disk i/O, memory allocation process,
     graphic date/time, Dos and miscellaneous)
     
     
     -signature / prototype 
    - main-definition 
    
    - call function formal( local var in function scope )and acutual arguments and parameters( data type, sequecne and no) input main->function  output main<-return 
     -return or nothing void type 
     
     no input in then use void in protype parameter list
     
     function return type,function name,sequence, data type, no of parameter then compiler exutes function
     
     first protype then call then defintion 
     
     if no return type in protype it is int  
     
     call by variable or call by constant function saif (s,s)
     - by value 
     - by ref
     
     
     Function Overloading 
     one function for more than one task diff data type argumenets and syntax u call define with sam ename judge from paramter list not from return type 
     
     no,datatypes and order
     
     A Match 
     type are same Actual == foraml arguments
     
     No Match
     
     diff types PARAmeters 
     Ambigous Match same but more than one 
     
     A match through Promotion or Standard conversion 
     short, char, unsigned char -> int
     
     flaot-> double 
     
     enumerated or user define -> int
     
     Standard match numeric of actual will match to protype unsigned can be 
     enumerated match numeric 
     any type of voidpointer match with pointer 
     zero value pointer type numeric pointer match 
     
     default arguments reduces overloading and 
     
     void saif(char='s",int = 35);
     is equal 
     void saif(char ij ='s",int j= 35);
     Data Str Linear connection and sequence and non linear no connection and no sequecne 
     
     inline function reduces switching and increases speed does not have prototype and declare it before main definiton 
     and increases  size of file
     
     excution time and overhead reduces exe file big prgram code is small otherwise great memory compiler decides copies or prorities over head inline function should be defined before 
     
     scope resoulution :: can use varable in program make a gloabl var and use it everywhere decalre it before main local and global have same name then prority would be given to global using resolutuonoperator 
     
     
     reference pointsto he reference it is 
      always intilize the ref var with a var it will get to know which reference it is it will effect both variables 
     datatype &var_name = var;
     usage with fucntion to reduce memory actual and formal argutments
      para ref address var functio sends or gets reference arguemnts 2nd nname and we can change value sof main inside hte function working on the same location giving anoth er tag to a memory location or variabke 
      
      main()
      
      {
      int i = 5;
      user (i)
      }
      
      user(int &j){
      j++
      }
      
      remeber to do it in protype alos 
      call by value var creates another copy of vars 
      call by ref & var is passed 
     or var addres is passed by pointer 
     
     less memory return more than one valur from fucntion 
     Process control block 
     
     call back and we can any function from inside of another functun but defintion part should be outside 
     
     recursion approch a function call himself
     
     user func we writes  and library func comes with compiler which writes compiler they are used very much they are collectio of that functions which are write for the ease of User  
     
     
     linear connection continuius and others are pointer like links 
     
     Arrays finite elements and homogenous data elemets
     data type name or identifier [ no of value orvariables ]
     int saif[10]; or we have array of objects
      array starts from 0
      indivual element access a[4] 
      array index or subscript inside th ebrackets  gives us the elemnt or reference of the array elemnt
      
      initialization 
      int a[4] = {0,1,2,3};
      
      if not knw the elemts then int a[] = {1,2,3,4}
       
       if no intilization garbage value inside element some value initilaize then oters would have zero a[4] = {1,1}
       
       decide range there is no bound checking in C/C++ ILLEGAL RESULT OR COMPUTER WILL HANG OT IN IF U TAKE VALUE TILl 40 u wanted till 4 in a loop 
       
       passsign a array element to function 
       
       int test[2]
       for (i= 0: i<3;i++);
       {
       show( test [i])
       }
       
       show (int t) {
       
       printf(i)
       }
       
       2 dimensional array 
       
       int saif[5][4]; //rows 5 and cols 4 total elemts 5*4
       
       total elements less than 1 would be last element location in that index
       linear or 1 dimensional array 2 dimsional array initialization 
        saif[2][3] = {{1,3,4},{5,8,7}} // how many rows that much {}pairs and elemts inside equal to col 
        multidimesional also
        memory view like continous one after other in location 
       
       Bubble Sort
     
     
     CONST keyword
     
     structure diff memory loc for data fields, members are public. data field have doff data type coll of hetetrogenous elemrnts 
     temporary no space allocated untill variable created try to create ot at top of ile or imort from header file. new data type u create. assingn data use . operato=
     struct saif optional tag name {
      fied 1; field2;
      :
      :
     };
     
     struct {
      fied 1; field2;
      :
      :
     } saif,test1;
     
     intiliation saif={1, "Saif"};
     
     diff strucutres can have same name field compiler knows to deal
     members are store in contiguous locations 
     
     you can pass stucture to function as normal variable 
     
     saif = test it will tranfer data of test strucutre to saif if both have same data tpe strucutre 
     
     nested struture nested struture is used as a member complex data type orDMBS programs usage.
     
     stru unit {
     
     int feet;
     float inches;
     };
     
     strut measure {
     
     unit length;
     unit width;
     };
     
     Measure M1; M1.length.feet = 5, M1.length.inches = 5; M1.width.feet = 5 M1.width.feet = 5  how much nesting that much dots operator 
     
     
     union diff data types one location for data. if you update value it will overwrite. one datatype at one one time. Bigger datatyoe will overwrite.MAX VYTE DATATYPEPLACE.Want to use one field than unio useage. ROM Bios programming. NEsted unions. Diff datatypes treated with one memoery loc. Union variable.
      Java donot have Unions and Structure.
     
     syntax union saif {
     int al;
     } ;
     pointers 
     
     pointer type of the address u want to store and * of the pointer sign name of pointer
     get address of variable "& operator"  and * to get value of the variable address store in pointer 
     
     datatype *var
     
     the data type which address pointer wants to store 
     
     int a= 10;
     int *b=&a;
     
     int* b and int *b are same *unary operator 
     
     *b value at the stored location in the address or pointer 
     we can intilize the pointer with the same value of data type adress  which it is pointer of or takes address of variable 
     &i address 
     *(&i) value at address *value at or indirection  
     pointers operators (*p)++  diff *(p++) at value 
     
     we can intilize pointer with the same data type pointer 
     
     int *ptr2 = ptr;
     
     
     pointer return in fucntion 
     
     
     main()
    {
    
         int *p
     int *f():
    p= f()
    }     
    
    int *f(){
   
   int i=0
   return (&i);
   }
   
   array of pointers 
   
   int i,j=0;
   int *saif[1];
   
   saif[0]= &i saif[1]= &j
   
   for (m=0;m<2;m++){
   cout<<*(saif[m]);
   }
     arrays for  pointer print and edit values using pointers,  pass pointers in function parameter list  
     void pointers which is used to general type of data type data rATHER THAN varialble data type stores address of the variable 
     & reference operator * deference get address and get value   
     
     donot want to send actual values difficult or impossible, function return more than 1 valuessend and recice arrays and strings in func,arrays manipulation not whole array
     diff data strutures making is made through pointers linked list,trees,one DS is takes reference for the other
     
     
     for memory info sending delete func we use  and work on  free  memoery
     
     Dynamic allocation
     
     Compile Program code,Global data,heap,stack
     
     Heap free memeory dynamic allocation operator use 
     
     
     2 opertors new allocates and delete remove space which reserved by new
     
     delete calls delete function frees the new created heap memory delettes only new operator created memeory or releases that only 
     otherwise results would be diff 
     
     int *pn = new int;
     
     delete *pn
     
     compile time variables created are static memory allocation which uses these dynamic are dynamic allocation memory 
     
     new uses memory as uses variable 
     
     datatype *pointername = new datatype
     first datatype which point that memory other new to reserve that memory bytes
     
     int *ptr = new int //2 bytes created in space heap and acces via ptr . when memory will be created or variable new return address to ptr otherwise no return it will be
     
     return 0
     
     acess just through  pointer as normal can be access just via variable and ptr also 
     
     
     int *pn = new int(1)
     
     char *ptc = new char("X")
     
     delete pn,ptc
     //OOP 
     
     Class template composes of properties and methods acess modifiers private ,protected, public for properties and methods. members are private. Nested classes usage when we want to use classese both inside na dmake one isntance. 
     object instance of class. Object have objective characteristics and name object = private data + public functions 
      Active and passive channels and communication channel
      priavte by default data private then fucntions public
      
      u can call members in three places main,child ,object class inside 
      
      levels| within class | from inherit | main
      
      private |yes|no|no
      protected|yes|yes|no
      public|yes|yes|yes
      
      Main program public - protected inherit class -protected  priavted class 
      
      Struture prog AND oop data type - Class ADT varible -instance object ,fucntion/rocedure/method members services,function calls/message passing 
      sizeof() return bytes of object size in memory.
      
      desructor destroys object when program finishes it calls itself it has no return type  member of class when object finishes name of the class  
     FREES the memeory  
      ~SAIF (){
      
      cout<<"destroted object";
      }
      
      Constructor calss automatically when an object is madeit is used to make assign values to data of class or intilizae data  
      no return type
      classname(parameter list ){
      
      }
      
      Constructor overloading  just parameter would be different default parameter 
      default copy constructor copy one construcor values of object  to other object we give  constructor  the  obejct two ways to call default = and operator and parathesis    
        Test t1(5,0)
        test t2(t1);
        test t3 = t1;
        
        we can give objects as parameters and return them to from fucntions and call them through third object and you can access there data to 
        :: RESOLUTION operator THIS keyword and NEW keyword  (. Dot operator access object memebrs ) with Arrow Operator (->) you can point to properties of class and functions with reference type pointer    
       we can define function outside the classmany object will have one function prgram and memory optimization whe u use loops use in function outside of class in class function comiler does not allow progrma gets comoplex  otherwise in the class u just give definition 
      reference variable  
      
      static variable and static function 
      
     member funtion,inline function, virtual, pure virtual and friend function
     
     virtuail function 
     virtual not physically but affects others 
     
     virtual function with diff version can be used in program and according to  program requirements appears in  function diff appearances 
     
     keyword virtual before function we can use it with diff definitions and versions 
     
     pure virtual fucntion base function does not have any defintion when base version does not have any work to do 
     
     if we write zero with out defining virtual function it is pure function 
     vitual void show()=0
     base* list[2];
     
     dervie d1,d2;
     list[0] = &d1;
     list[1] = &d2;
     list[0]->show();
     list[1]->show();
     
     usage designing view near
     
     correct and best implementation of polymorphism is because of vitual funtion 
     
     shap class inherited classes rectanle cirle line classes  all have same draw func with virtual func u can call three of them call them  using one syntax
     
     shape *arr[50];
     
     for(i=0;i<50;i++)
     arr[i]->draw()
     
     which address it will contain it will call that function of draw will be called 
     
     THIS pointer member data of class is access it is a built in pointer points to active object which tells which object is calling invoke functions  
     
     template STL
     Template With functions and class u can at one time  handle diff data types 
     
     Two Types:
     Class template and Function template 
     
     funtion teplate for int float char overload more times function body we write,more space by program mistake then correct function body 
     
     one func operate with diff datatypes func template 
     
     syntax typeor mytype or aythingcan be  function written compiler will not do binding of template  and no writing of   definition untill template is called because compiler will not know which type  
     which type to work with func It's late binding like virtual func
     
     function template overide one condition when we want func template works with every type and  does one task except one type we wrtie for thqat excetion one func it will be overiding 
     teplate func on that condition 
     
     void swap (double a, double b){
     
     //somecode 
     
     }
     
     Template <class T>
    just for one type argument that function call parameter list would be of same data type  
     T argument of template 
     T min( T a, T b){
     return (a<b)?a:b;
     }
     
     Multiple argument types 
     template function is of diff argument types u can give with class keyword multiple or more than one arguments 
     
     multiple arguments in which fnction call of diff type of data type
     Template <class T , Class S, Class Z>
     
     T argument of template 
     T min( T a, S b, Z c){
     cout<<a<<b<<c;
     }
     
     void main(){
     int i = 1, float j = 3.14, char ="A";
     min(i,j,ch);
     
    
     }
     
     
     Class Template usage one class with diff types vari it deals for diff types we donot make diff classes 
     
     template <class T>
     
     class stack{
     
     private :
     
     T stk[MAX];
     
     }
     
     main(){
     
     stack <int> S1;
     stack <float> S2;
     
     //u can make a custom type like complex class then make it's obejcts 
     
     Complex C1(1,1),C2(1,1);
     
     stack <complex> S3;
     
     S3.push(C1);
     S3.push(C2);
     }
     
     
     Exception Handling 
     
     errors which occur during runtime 
     
     reasons:
    less memory,file not opened array avove bound, assign var a value or object which is implossible 
    
    as these errors occur then program have to make decision how to control during rogram 
    
    error msg on the screen,display box in GUI, take input from better data form user or exit in a good way or gracefully or terminate progrma 
    
    C++ dealing of after function call we see it's return value did it task properly or not 
    
    usage of setjmp or longjmp when donot want to terminate program after seeing error msg it starts the next  process  
    
     
     try catch finally block and throw error
     
     encapsulation Access modifiers
     abstraction getter/setter
     inhertance to make new classes from exisiting 
     base class and derived class base class donot get effected add functionality we make a child class 
     
     child class will get priority in case when base and child have same funct name and parameter list then child class object func call will get priority nearet scope 
    protected members are private in there class in base class untill derived 
    
    base and derived make objects then both are independednt and have no relationship
    
    protcted for the class in it and other program is private and drived it is public 
    
    drived class sugests base class is public or derive 
    
    derived class object created it will create first derived constructor then base class constructor 
     add functionality i existing libraries and adding functionality is easy 
     - Multiple  A class which derives from multiple base classes A,B -> c   make program complex c# and java does not support that 
     - multiple lvl class who is base class of the child also has a base class e.g A->B->C this is very much safe approch  
     
     if we want to use some function of private inheritance then we declare that function in drived public functio  
     members of protected in base becomes public in derive class 
     public inheritance or private or public by default inheritance is private 
     
     private specifier public and protected members in base would be private members in derived class it's object cannot access public and protected memebrs of base use or call
     if we do further inherit derived class in derived 2 we cannot access protect and public of base  in 2 derived  
     
     public specifier derived class protected(both would be private for the class) and public members in there class behaves that same behave the inherit public base class protect and base members
     make class hierarchy 
     
     https://media.geeksforgeeks.org/wp-content/cdn-uploads/table-class.png
     
     protected 
     
     base class protected derived base class public and protected in derived it will be private and in derived protected mmebers  
     
     inheirt cannot inherit destructor , assignment operator operator = like constructor  and destructors 
     binding 
     source compilatio to exe functions and user underatanable  commands to machine code  
     (Early stage) Static normal excution in compilation time and (late stage) Dynamic Binding compiler unable to take decision virtual functions msotly 
     
     vitual base class base class two inherits copies members oen more class dervies inherited classes does no which base or parent class function to call compiler is confuse wh  
     vitual base classes 
     
     class dervied class : virtual public base
     
     
     frd function 
     not a member of class private and protected memebers access same as function two diff classes brige work two objects data members values add good and beauiful feature both classes annouces one function frd frd of both classes 
     
     it has scope definition declaration
     
     int friendsum(A a, B b ){
     
     return (a.data + b.data)}
     friend int friendsum(A,B);
     
     polymorphism many forms diff versions or varities 
     poly has it on diff forms 
     
     with this we send same msg to diff objects and every object responds according to its; on approach  
     c++ we do this with Virtual func and dynamic finding 
     
     poly real work or taste runtime object creation and destroys it
     
     Encapsulation,inheritance and Poly is related or connected to each other 
     
     first we do encapsulation then inheritance then poly and we utilized fully capablity with poly 
     
     derived class objects we treat them as base class objects poly supports this principle 
     
     with utilization of poly derived class objects we send them to base class functions  
     function which can recieves these kind of messages  it is called polymorphic function
     
     OOP real work 
     Operator overloading
     
     onstream operator look that 
     
     existing operators giving new meaning redefine one more time define in user define data type they are funtion insead of name we use symboles demote and funtion definiton is same 
     
     return  value 
     
     unary and binary operators 
     
     nameless temporary objects 
     
     ++count 
     return counter(count); //without name object created write easily value of count will be transfer 
     
     operator is a keyword 
     syntax 
     
     prefix operator for postfix just in paramter list give int 
     void operator++ (){
     }
     
     post fix 
     void operator++ (int){
     }
     return counter(count++);
     
     binary overloading dis3.add(d1,d2); values after addition member by member 
     
     dis3 = d1 + d2; 2 user define objects  + overloaded binary operator 
     
     distance operator + (distance); //protype 
     
     distance distance :: operator  + (distance d2){} //outside declaration of function 
     
     dis3 = dis1 + dis2;
     object dist1 distance distance :: operator  + (distance d2){} //outside declaration of function 
     
     not overloaded operators : colon , .dot , :: resolution , ? question mark 
     
     unary and binary both versions &,+ can overload on both versions
     operator overloaded built in preference  
     
     previous built in operators cannot be redefine 
     
     your define operators user type objects can be used cannot chg intrinsic operator meaning
     overloading function (name should be same,datatypes,sequece differs ) and overiding functions 
     Abstract Class and Interface
     exception Handling 
      
     
     Storage Classes 
     life time  visibility / scope , and default values by compiler whne var is created   of Variables
     
     Static, External/Global and  Automatic/local
      
      Automatic /local 
      fucntion local variable crated i fucntion use in it only visible 
      
      lifetime function created untill it is function is ended created by fucntion ended in memory default value is garbage and complier does not assign anything 
      
      auto int i
      
      storage classes are auto u write it or not it is auto as normal var are auto 
      
      Global/External 
      
      visibility acces anywher from progrma and use it. life time until program is running and lifetime assign efault value zero by compiler
      
      extern int i;
      
      static auto(visiblity) + external (lifetime) + default value zero 
      
      static int i;
      registers and volatile storage classes var in registers 
      
      Nearest scope var or funcion call locally then gloablly one name then  want to use both then resolution operator otherwsie local fail then global or far scope jump 
      
      when decalre outside function from class 
      
      return type class name ::function name(parameter)
      
      u can return and send objects in functions important concept
      
      static class data 
      
      decalre data type inside class whole class one data all objects would have one var or accessing one var other than every object have seprate that data or var  common data 
     
     class wise operation usage of static  class have same var  and every objects have common    or all objects are sharing same var not associated with one object 
     
     
     int test::count//static defintion 
     
     static funtion why declare function to use static data of very object seprately or use it with specific object function define function for that to call static data 
     
     whole class common static data manipulate with static function without any direct object 
     
     use with resolution operator 
     
     static void show(){}
     test::show total
     
     
     
File Handling

Standard Inut Output
Record | Formatted | String | Character
fread    fscanf      fgets   getx
fwrite  fprintf     fputs   putc

String I/O gets and puts func

formatted I/O mixture of data can be read and write 

record block of data of same type and size like array block of data


System Input/Output

Read and Write

text mode number string  data and binary 

fopen

read mode r file should be made 

w write mode file is exists overwrite otherwise file shoud be created 

a append write if file exists otherwise file be created

rt read write file exists

wt w+ read write data in file overwrite  

at a+ read and append file not exits will be created

 

we store file info in file structure and  make a pointer in it and which points to file 

putc writes in  file

putc(ch,fptr) //ch variable where data is stored and written in file pointer

fclose closes the file and write the data from buffer to file 

EOF end of file tells compiler end of file


Stream Classes 

https://www.cplusplus.com/reference/iolibrary/

file and program interface

disk file to program input stream (read) and program to file output stream (write)

file and program input stream link and program to file output stream 
<< Insertion  >> extraction

C++ i/o system uses fstream,ifstream,ofstrean usage from <iostream.h> header file

disk file->processing program read from disk and data input for processing input stream

data after processing output stream and write data to disk file 

ios class all u need for streams in c++ formatting flags,error status flags and file operations 

foramtting flgs enums and definitons collection works like swtich on and off input and output format can be set set through unsetf and setf functions 

manipulator stream gives formatting guidance to it argument and non argument manipulators we can use some manipulators with ios functions

istream , ostream,functions


error states bits gives us input and output  stream diff situations news attributes and functions also


use fstream use streams with file formatted file I/O store in disk in characters format no errors occur use mostly for character strings simple way an

ifstream read and ofstream write objects wil be made 

string read and write using them 

character i/o get and put ostream and istream functions oe character input and output  


Binary I/O data store in real face in memeory no fomartting for character 32 int to 2 bytes 

write ofstream emember and read ifstream emember usdatat into bytes trade no formatting look parameters we tell data buffer and size we tell 

object I/O

object WRITE in binary mode integerity of data is there and also for read 
